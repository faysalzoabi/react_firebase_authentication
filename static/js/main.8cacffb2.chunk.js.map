{"version":3,"sources":["firebase.js","context/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","pushState","style","display","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgatPassword","message","setMessage","App","Container","minHeight","maxWidth","exact","path","ForgotPassword","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cacffb2.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app","import React, {useContext, useState, useEffect} from 'react'\r\nimport {auth} from '../firebase'\r\n\r\nconst AuthContext = React.createContext();\r\n\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\n\r\nexport function AuthProvider({children}) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email,  password)  {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email,  password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function logout(){\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email){\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail(email){\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function  updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AuthContext.Provider value={value}>\r\n                {!loading && children}\r\n            </AuthContext.Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useRef, useState} from 'react'\r\nimport {Form, Button, Card, Alert} from 'react-bootstrap'\r\nimport {useAuth} from '../context/AuthContext'\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\nfunction Signup() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const {signup} = useAuth();\r\n    const [error,  setError] =  useState('');\r\n    const [loading,  setLoading] =  useState(false);\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if(passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Password do not match')\r\n        }\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError(\"Failed to create an account\");\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n           <Card>\r\n               <Card.Body>\r\n                   <h2 className=\"text-center mb-2\">Sign Up</h2>\r\n                    {error && <Alert  variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef}  required/>\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef}  required/>\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef}  required/>\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Sign Up</Button>\r\n                    </Form>\r\n               </Card.Body>\r\n           </Card> \r\n           <div className=\"w-100 text-center mt-2\">\r\n               Already have an account? <Link to=\"/login\">Log in</Link>\r\n           </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import React, {useState} from 'react'\r\nimport {Card, Button, Alert} from 'react-bootstrap'\r\nimport {useAuth} from '../context/AuthContext'\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError]  = useState(\"\")\r\n    const {currentUser, logout} = useAuth(\"\")\r\n    const history = useHistory()\r\n    \r\n    async function handleLogout() {\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.pushState(\"/login\")\r\n        }catch {\r\n            setError(\"Failed to log out\")\r\n        }\r\n    }\r\n\r\n    return (\r\n       <>\r\n        <Card>\r\n            <Card.Body>\r\n            <h2 className=\"text-center mb-2\">Profile</h2>\r\n            {error && <Alert  variant=\"danger\">{error}</Alert>}\r\n            <strong>Email: </strong> {currentUser.email}\r\n            <Link style={{display:\"block\"}} to =\"/update-profile\" className=\"btn btn-primary w-180 mt-3\">Update Profile</Link>\r\n            </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n            <Button variant=\"link\" onClick={handleLogout}>Log Out</Button>\r\n        </div>\r\n       </>\r\n    )\r\n}\r\n","import React, {useRef, useState} from 'react'\r\nimport {Form, Button, Card, Alert} from 'react-bootstrap'\r\nimport {useAuth} from '../context/AuthContext'\r\nimport {Link, useHistory}  from 'react-router-dom'\r\n\r\nfunction Login() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const {login} = useAuth();\r\n    const [error,  setError] =  useState('');\r\n    const [loading,  setLoading] =  useState(false);\r\n    const  history = useHistory()\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError(\"Failed to login in\");\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <Card>\r\n               <Card.Body>\r\n                   <h2 className=\"text-center mb-2\">Log In</h2>\r\n                    {error && <Alert  variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef}  required/>\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef}  required/>\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Login In</Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/forget-password\">Forgot Password?</Link>\r\n                    </div>\r\n               </Card.Body>\r\n           </Card> \r\n           <div className=\"w-100 text-center mt-2\">\r\n               Need an Account? <Link to=\"/signup\">Sign up</Link>\r\n           </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport {useAuth} from '../context/AuthContext'\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}) {\r\n\r\n    const {currentUser}  = useAuth();\r\n    \r\n    return (\r\n        <Route {...rest}\r\n        render = {props => {\r\n            return currentUser ? <Component {...props}/> : <Redirect to=\"/login\"/>\r\n        }}\r\n        >\r\n        </Route>\r\n    )\r\n}\r\n","import React, {useRef, useState} from 'react'\r\nimport {Form, Button, Card, Alert} from 'react-bootstrap'\r\nimport {useAuth} from '../context/AuthContext'\r\nimport {Link}  from 'react-router-dom'\r\n\r\nfunction ForgatPassword() {\r\n    const emailRef = useRef();\r\n    const {resetPassword} = useAuth();\r\n    const [message,  setMessage] =  useState('');\r\n    const [error,  setError] =  useState('');\r\n    const [loading,  setLoading] =  useState(false);\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        try {\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Check you inbox for further instructions')\r\n        } catch {\r\n            setError(\"Failed to reset password\");\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <Card>\r\n               <Card.Body>\r\n                   <h2 className=\"text-center mb-2\">Password Reset</h2>\r\n                    {error && <Alert  variant=\"danger\">{error}</Alert>}\r\n                    {message && <Alert  variant=\"danger\">{message}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef}  required/>\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Reset Password</Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </div>\r\n               </Card.Body>\r\n           </Card> \r\n           <div className=\"w-100 text-center mt-2\">\r\n               Need an Account?? <Link to=\"/signup\">Sign up</Link>\r\n           </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ForgatPassword\r\n","import Signup from \"./components/Signup\";\nimport {Container} from 'react-bootstrap';\nimport { AuthProvider } from './context/AuthContext'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\nimport Login from './components/Login';\nimport PrivateRoute from './components/PrivateRoute'\nimport ForgotPassword from \"./components/ForgotPassword\";\n\nfunction App() {\n  return (\n        <Container \n        className=\"d-flex align-items-center justify-content-center\"\n        style={{minHeight:\"100vh\"}}\n        >\n            <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\n              <Router>\n                  <AuthProvider>\n                    <Switch>\n                      <PrivateRoute exact path=\"/\" component={Dashboard}/>\n                      <Route path=\"/signup\" component={Signup}/>\n                      <Route path=\"/login\" component={Login}/>\n                      <Route path=\"/forget-password\" component={ForgotPassword}/>\n                    </Switch>\n                  </AuthProvider>\n              </Router>\n            </div>\n        </Container>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}